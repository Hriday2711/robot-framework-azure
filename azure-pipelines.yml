# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: windows-latest

steps:
- task: UsePythonVersion@0
  displayName: 'Use Python 3.x'
  condition: always()

- script: |
   pip install -r Requirements.txt
  displayName: 'Install Robot Dependencies'
  continueOnError: true
  condition: always()

- script: |
   npm install @puppeteer/browsers@latest
   npx @puppeteer/browsers install chrome@121.0.6167.86
   echo "##vso[task.prependpath]${Agent.ToolsDirectory}"
  
  displayName: 'Install Chrome'

- script: |
   npx @puppeteer/browsers install chromedriver@121.0.6167  --path  C:\Users\VssAdministrator\AppData\Roaming\Python\Python312\Scripts
   echo "##vso[task.prependpath]${Agent.ToolsDirectory}"
  displayName: 'Install Chrome Driver'
 
- powershell: |
   # Run the initial Robot Framework tests
   robot --outputdir results Tests/
   exit 0
  displayName: 'Run Robot Framework Tests'
  continueOnError: true
  condition: always()


- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
   targetPath: 'results'
   artifact: 'Robot Test Execution Results'
  continueOnError: true
  condition: always()

- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'Robot Test Execution Results'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: PowerShell@2
  displayName: 'Trigger GitHub Actions Workflow from Azure'
  inputs:
    targetType: 'inline'
    script: |
      # Variables
      $token = "$(GITHUB_PAT)" # Replace with your GitHub Personal Access Token (Securely stored in Azure Pipeline)
      $owner = "Hriday2711" # Replace with your GitHub username or organization
      $repo = "robot-framework-azure" # Replace with your GitHub repository name
      $workflowFileName = "deploy.yml" # Replace with your workflow file name
      $branch = "main" # Replace with the branch you want to trigger the workflow on
      
      # GitHub API URL to trigger a workflow
      $uri = "https://api.github.com/repos/$owner/$repo/actions/workflows/$workflowFileName/dispatches"
      
      # Request Body
      $body = @{
          ref = $branch
      } | ConvertTo-Json -Depth 1
      
      # Headers
      $headers = @{
          Authorization = "token $token"
          Accept        = "application/vnd.github.v3+json"
      }
      
      # Trigger the workflow
      $response = Invoke-RestMethod -Uri $uri -Method POST -Headers $headers -Body $body
      
      # Check Response
      if ($response -eq $null) {
          Write-Host "GitHub Actions workflow triggered successfully."
      } else {
          Write-Host "Failed to trigger workflow."
          Write-Output $response
      }

# - task: SendGrid@1
#   inputs:
#     sendgridkey: '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'
#     to: 'hridaybhogayata@gmail.com'
#     from: 'hridaybhogayata4@gmail.com'
#     subject: 'Azure CI Test Report by Send grid'
#     htmlbody: |
#       Hello,
            
#       Please check the attached reports for Azure CI Automation pipeline run.
#     addattachment: true
#     attachment: ''
  
#   displayName: 'Send Email Notifications'
#   condition: always()

# - task: GitHubPagesPublish@1
#   inputs:
#     docPath: 'D:\a\1\s\results\report.html'
#     githubusername: 'Hriday2711'
#     githubemail: 'hridaybhogayata4@gmail.com'
#     githubaccesstoken: '$(GITHUB_PAT)'
#     repositoryname: 'robot-framework-azure'
#     branchname: 'main'
#     commitmessage: 'Azure CI Test execution reports for $(Build.BuildId)'
  



